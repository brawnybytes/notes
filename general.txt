querySelector vs querySelectorAll
    // Select the first <div> element
    let el = document.querySelector("div"); 

    // Select all <div> elements
    let els = document.querySelectorAll("div"); 

document.querySelector('a').addEventListener('click', function(event) {
    event.preventDefault();  // Prevents the link from following its href
    console.log("Default action prevented");
});



preventDefault()
    Prevents the default action associated with an event from happening.

stopPropagation()
    Purpose: Stops the event from bubbling up (or down, in the case of capturing) the DOM tree.

Back-Forward Cache (BFCache) 
    Browsers often cache pages to improve performance when navigating using the back and forward buttons. This Back-Forward Cache (BFCache) allows pages to be quickly restored without re-fetching or re-rendering them.

Good vebsite to know about versioning
    https://semver.org/


Leetcode
    


Spring 
Spring boot 
Hibernate
Core java
Advanced java


AsyncAppender 
AsyncLogger
Garbage Collection 


logging
multithreading
exceptional handling
microservices 


Pessimistic locking 
    2PL

Optimistic locking
    Timestamp ordeting protocol 



Normalisation 
    1NF - no multi value attributes are allowed
    2NF - no partial dependency - some prime attributes determines non prime
    3NF - no transitive dependency
    BCNF - if x -> y then x should be a super key


Distrinuted Concurrecy control
    https://www.shiksha.com/online-courses/articles/concurrency-control-techniques-in-dbms/


Micoservices Design Patterns
    SAGA design pattern 
    Aggregator
    API gateway
    Chain of responsibility 
    Asynchronous messaging 
    Database design pattern - database per service or shared database
    Event sourcing - publish the event about the change
    Branch - output can come from any srvice not necessarily following a sequence
    CQRS -> command (create, delete, update) , query (read) responsibility pattern 
    Circuit breaker design pattern 
    Decomposition --> domains, business, strangler or vine pattern


Multithreading
    

leetcode

    total -> 150 questions

    start time -> 12:50
    end time -> 12:50

    13 questions in one hour 
    4 mins per quesion 

    

    9 questions 



    linked list -- done 
    then tree 
    

Database 
    Normalisation
    Transactions and Concurrecy Control 
    Indexing 
